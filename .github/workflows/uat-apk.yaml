name: Generate Test APK

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.1"

      - name: Flutter version
        run: flutter --version

      - name: Install Dependencies
        run: flutter packages get

      - name: Format
        run: dart format --set-exit-if-changed lib test

      - name: Code Generation
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Analyze
        run: flutter analyze lib

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: key.jks
          encodedString: ${{ secrets.RELEASE_KEYSTORE }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" >> android/key.properties
          echo "keyPassword=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.RELEASE_KEYSTORE_ALIAS }}" >> android/key.properties

      - name: Build APK
        run: flutter build apk  --flavor development --target lib/main_development.dart --obfuscate --split-debug-info=debug-symbols

      - name: Upload APK to Github Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aira-app
          path: build/app/outputs/flutter-apk/app-development-release.apk

      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_DEV_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: Development-Team
          file: build/app/outputs/flutter-apk/app-development-release.apk

#      - name: Upload debug symbols to GitHub Artifacts
#        uses: actions/upload-artifact@v4
#        with:
#         name: debug-symbols-development-apk
#         path: debug-symbols


#
#      - name: Report Status
#        if: always()
#        uses: ravsamhq/notify-slack-action@v2
#        with:
#          status: ${{ job.status }}
#          notification_title: "{repo}"
#        env:
#            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
